# This workflow runs manually.
#
# `Terraform - Apply` job uses `checkout` to download the content of the repository. It installs the latest version of Terraform CLI
# and configures the Terraform CLI configuration file with an API token for Terraform Cloud (app.terraform.io). It runs `terraform init`
# to initialize the directory. It uses the GitHub Action `GitHubAction_terraform-plan` to run `terraform plan` and use the the
# GitHub Action `GitHubAction_terraform-apply` and run `terraform apply`.
#
# Documentation
# - https://github.com/actions/checkout
# - https://github.com/benyboy84/GitHubAction_terraform-plan
# - https://github.com/benyboy84/GitHubAction_terraform-apply
#
# Prerequisites:
# - An Azure account and Azure Access Credentials
# - A Terraform Cloud account
#
# Environment Variables for your workspace with their respective values.
# - ARM_CLIENT_ID
# - ARM_CLIENT_SECRET
# - ARM_TENANT_ID
#
# Terraform Cloud user API token stored as a GitHub secret (e.g. TF_API_TOKEN) in the repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# GitHub secret in step `Setup Terraform`.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: Terraform - Apply

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      runner:
        description: Label of the runner to use.
        required: false
        default: ubuntu-latest
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        uses: benyboy84/GitHubAction_terraform-plan@v1.0.0
        with:
          GitHub_Token: ${{ secrets.GITHUB_TOKEN }}
          Out: terraform.tfplan

      - name: Terraform Apply
        id: apply
        uses: benyboy84/GitHubAction_terraform-apply@v1.0.0
        with:
          Github_Token: ${{ secrets.GITHUB_TOKEN }}
          Plan: terraform.tfplan
