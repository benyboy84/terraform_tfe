# This workflow runs manually.
#
# `Terraform Unlock` job uses `checkout` to download the content of the repository. It installs the latest version of Terraform CLI
# and configures the Terraform CLI configuration file with an API token for Terraform Cloud (app.terraform.io). It runs `terraform init`
# to initialize the directory to finally run `terraforn force-unlock` with the `ID` supplied as an input to unlock the state file.
#
# Documentation
# - https://github.com/actions/checkout
#
# Prerequisites:
# - An Azure account and Azure Access Credentials
# - A Terraform Cloud account
#
# "API-driven workflow" Workspace.
# Environment Variables for your workspace with their respective values.
# - ARM_CLIENT_ID
# - ARM_CLIENT_SECRET
# - ARM_TENANT_ID
#
# Terraform Cloud user API token stored as a GitHub secret (e.g. TF_API_TOKEN) in the repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# GitHub secret in step `Setup Terraform`.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: Terraform - Unlock State File

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      lock_id:
        description: Terraform state file lock ID.
        required: true
        type: string
      runner:
        description: Label of the runner to use.
        required: false
        default: ubuntu-latest
        type: string

permissions:
  contents: read

jobs:
  terraform-unlock:
    name: Terraform Unlock
    runs-on: ${{ github.event.inputs.runner}}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Unlock
        id: unlock
        run: terraform force-unlock -force ${{ github.event.inputs.lock_id }}
